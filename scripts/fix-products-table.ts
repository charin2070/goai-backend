import postgres from 'postgres';

async function fixProductsTable() {
  const connectionString = process.env.POSTGRES_URL || 'postgresql://goai_user:GggodbStrong0@194.54.158.82:5432/goai_db';
  
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã products...');
  console.log('üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫:', connectionString.replace(/\/\/.*@/, '//***@'));
  
  try {
    const client = postgres(connectionString);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ status
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ status...');
    const columnExists = await client`
      SELECT EXISTS (
        SELECT FROM information_schema.columns 
        WHERE table_name = 'products' 
        AND column_name = 'status'
      );
    `;
    
    if (!columnExists[0].exists) {
      console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü status...');
      await client`ALTER TABLE products ADD COLUMN status status NOT NULL DEFAULT 'active'`;
      console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü status –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
      console.log('‚ö†Ô∏è –°—Ç–æ–ª–±–µ—Ü status —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
    console.log('üìù –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...');
    try {
      await client`CREATE INDEX IF NOT EXISTS idx_products_name ON products(name)`;
      await client`CREATE INDEX IF NOT EXISTS idx_products_status ON products(status)`;
      await client`CREATE INDEX IF NOT EXISTS idx_products_price ON products(price)`;
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã');
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤:', error.message);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...');
    const tableInfo = await client`
      SELECT column_name, data_type, is_nullable, column_default
      FROM information_schema.columns
      WHERE table_name = 'products'
      ORDER BY ordinal_position
    `;
    
    console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã products:');
    tableInfo.forEach((col, index) => {
      console.log(`   ${index + 1}. ${col.column_name} (${col.data_type}) ${col.is_nullable === 'NO' ? 'NOT NULL' : 'NULL'}`);
    });
    
    await client.end();
    
    console.log('\nüéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã:', error);
    return false;
  }
}

fixProductsTable().then(success => {
  console.log('\n' + '='.repeat(50));
  console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: ${success ? '‚úÖ –ó–ê–í–ï–†–®–ï–ù–ê' : '‚ùå –û–®–ò–ë–ö–ê'}`);
  console.log('='.repeat(50));
  process.exit(success ? 0 : 1);
}).catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
}); 